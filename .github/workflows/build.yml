name: Build image

on:
  pull_request:
  push:
    paths-ignore:
      - '*.md'
      - '*.org'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - uses: cachix/install-nix-action@v14
      with:
        install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
        install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
        extra_nix_config: |
          experimental-features = nix-command flakes

    - uses: cachix/cachix-action@v10
      with:
        name: akirak
        pushFilter: '(-source$|\.tar\.gz$)'
        # If you chose signing key for write access
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        # If you chose API tokens for write access OR if you have a private cache
        # authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - run: nix build

    - name: Test the executable
      run: nix flake check

    - run: nix build '.#image'

    - run: docker load < result

    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/org-make-toc
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag org-make-toc:latest $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
